hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 123
      consider_prior: true
      prior_weight: 1.0
      consider_magic_clip: true
      consider_endpoints: false
      n_startup_trials: 10
      n_ei_candidates: 24
      multivariate: false
      warn_independent_sampling: true
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
    direction: minimize
    storage: null
    study_name: knn
    n_trials: 1
    n_jobs: 1
    search_space: null
    params:
      preprocess: choice("NONE", "NORM_SEPERATLY", "NORM_AFTER_CONCAT")
      distance_metric: choice("l2", "ip")
      neighbor_weighting: choice("uniform", "distance")
      n_neighbors: tag(log, interval(2, 1000))
      modality_weights:
        - interval(0
        - 1)
        - interval(0
        - 1)
    custom_search_space: null
  help:
    app_name: ${hydra.job.name}
    header: "${hydra.help.app_name} is powered by Hydra.

      "
    footer: "Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      "
    template: "${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      "
  hydra_help:
    template: "Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use '--cfg hydra' to Show the Hydra config.

      "
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: "[%(asctime)s][HYDRA] %(message)s"
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
        - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: "[%(asctime)s][%(name)s][%(levelname)s] - %(message)s"
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
        - console
        - file
    disable_existing_loggers: false
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
      - hydra.mode=RUN
    task:
      - modalities=["modality_1", "modality_2"]
      - modality_weights=[1,1]
  job:
    name: knn_raw_code
    chdir: null
    override_dirname: modalities=["modality_1", "modality_2"],modality_weights=[1,1]
    id: ???
    num: ???
    config_name: knn
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: "="
        item_sep: ","
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: "1.3"
    cwd: /home/leander/MIT_projects/meds-interp
    config_sources:
      - path: hydra.conf
        schema: pkg
        provider: hydra
      - path: /home/leander/MIT_projects/meds-interp/src/meds_interp/configs
        schema: file
        provider: main
      - path: ""
        schema: structured
        provider: schema
    output_dir: /home/leander/MIT_projects/meds-interp/outputs/2024-07-02/13-17-46
    choices:
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: optuna
      hydra/sweeper/sampler: tpe
      hydra/launcher: basic
      hydra/output: default
  verbose: false
